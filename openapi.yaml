openapi: 3.1.0
info:
  title: FastAPI
  version: 0.1.0
paths:
  /auth/signup:
    post:
      tags:
        - auth
      summary: Signup
      operationId: signup_auth_signup_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /auth/login:
    post:
      tags:
        - auth
      summary: Login
      operationId: login_auth_login_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /tasks/:
    get:
      tags:
        - tasks
      summary: Get All Tasks
      operationId: get_all_tasks_tasks__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - tasks
      summary: Add New Task
      operationId: add_new_task_tasks__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskTitle'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /tasks/{task_id}:
    patch:
      tags:
        - tasks
      summary: Set Priority
      operationId: set_priority_tasks__task_id__patch
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: integer
            description: desc
            title: Task Id
          description: desc
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/TaskPriority'
              title: Req Body
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - tasks
      summary: Update Task
      operationId: update_task_tasks__task_id__put
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: integer
            description: desc
            title: Task Id
          description: desc
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/TaskTitle'
              title: Req Body
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - tasks
      summary: Delete Task
      operationId: delete_task_tasks__task_id__delete
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: integer
            description: desc
            title: Task Id
          description: desc
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /share/:
    get:
      tags:
        - share
      summary: Get Shared Lists
      operationId: get_shared_lists_share__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - share
      summary: Share List
      operationId: share_list_share__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInvitation'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - share
      summary: Stop Sharing
      operationId: stop_sharing_share__delete
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - OAuth2PasswordBearer: []
components:
  schemas:
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    LoginRequest:
      properties:
        email:
          type: string
          format: email
          title: Email
        password:
          type: string
          format: password
          title: Password
          writeOnly: true
      type: object
      required:
        - email
        - password
      title: LoginRequest
    NewUser:
      properties:
        email:
          type: string
          format: email
          title: Email
        password:
          type: string
          format: password
          title: Password
          writeOnly: true
        name:
          type: string
          title: Name
      type: object
      required:
        - email
        - password
        - name
      title: NewUser
    TaskPriority:
      properties:
        priority:
          type: integer
          title: Priority
      type: object
      required:
        - priority
      title: TaskPriority
    TaskTitle:
      properties:
        title:
          type: string
          title: Title
      type: object
      required:
        - title
      title: TaskTitle
    UserInvitation:
      properties:
        invited_user_email:
          type: string
          format: email
          title: Invited User Email
      type: object
      required:
        - invited_user_email
      title: UserInvitation
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
  securitySchemes:
    OAuth2PasswordBearer:
      type: oauth2
      flows:
        password:
          scopes: {}
          tokenUrl: token
